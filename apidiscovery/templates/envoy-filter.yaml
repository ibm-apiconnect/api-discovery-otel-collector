---
{{- if (eq .Values.discovery.datasource_type "envoy") }}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: wasm-envoy-filter
  namespace: istio-system
spec:
  configPatches:
  - applyTo: ROUTE_CONFIGURATION
    match:
      context: SIDECAR_INBOUND
    patch:
      operation: MERGE
      value:
        request_headers_to_add:
        - append: false
          header:
            key: x-ibm-discovered-key
            value: '%REQ(:path)%-%REQ(:method)%'
        response_headers_to_add:
        - append: false
          header:
            key: x-request-id
            value: '%REQ(x-request-id)%'
        - append: false
          header:
            key: x-ibm-discovered-key
            value: '%REQ(:path)%-%REQ(:method)%'
  # This patch defines a named Wasm extension and provides a URL to fetch Wasm binary from,
  # and the binary configuration. It should come before the next patch that applies it.
  - applyTo: EXTENSION_CONFIG
    patch:
      operation: ADD
      value:
        name: my-wasm-extension
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
          config:
            root_id: my-wasm-root-id
            vm_config:
              vm_id: my-wasm-vm-id
              runtime: envoy.wasm.runtime.v8
              code:
                remote:
                  http_uri:
                    uri: https://github.com/ibm-apiconnect/api-discovery-otel-collector/raw/refs/heads/main/reqresplog.wasm
            configuration:
              "@type": "type.googleapis.com/google.protobuf.StringValue"
              value: |
                {
                      "ds-hostname": "management-api-discovery-otel-collector",
                }
  # The last patch instructs to apply the above Wasm filter to the listener/http connection manager.
  - applyTo: HTTP_FILTER
    match:
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
            subFilter:
              name: envoy.filters.http.router
    patch:
      operation: INSERT_BEFORE
      value:
        name: my-wasm-extension # This must match the name above
        config_discovery:
          config_source:
            ads: {}
          type_urls: ["type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm"]
  - applyTo: CLUSTER
    match:
      context: SIDECAR_OUTBOUND
    patch:
      operation: ADD
      value: # cluster specification
        name: otel_collector
        type: LOGICAL_DNS
        connect_timeout: 0.5s
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: otel_collector
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        protocol: TCP
                        address: management-api-discovery-otel-collector.{{ .Values.discovery.namespace }}.svc.cluster.local
                        port_value: 5556
{{- end }}
